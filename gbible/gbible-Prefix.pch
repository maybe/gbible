//
// Prefix header for all source files of the 'gbible' target in the 'gbible' project
//

// ============================ LICENSE ============================
//
// The code that is not otherwise licensed or is owned by photoKandy
// Studios LLC is hereby licensed under a CC BY-NC-SA 3.0 license.
// That is, you may copy the code and use it for non-commercial uses
// under the same license. For the entire license, see
// http://creativecommons.org/licenses/by-nc-sa/3.0/.
//
// Furthermore, you may use the code in this app for your own
// personal or educational use. However you may NOT release a
// competing app on the App Store without prior authorization and
// significant code changes. If authorization is granted, attribution
// must be kept, but you must also add in your own attribution. You
// must also use your own API keys (TestFlight, Parse, etc.) and you
// must provide your own support. As the code is released for non-
// commercial purposes, any directly competing app based on this code
// must not require payment of any form (including ads).
//
// Attribution must be visual and be of the form:
//
//   Portions of this code from Greek Interlinear Bible,
//   (C) photokandy Studios LLC and Kerri Shotts, released
//   under a CC BY-NC-SA 3.0 license.
//
// NOTE: The graphical assets are not covered under the above license.
// They are copyright their respective owners. Any third party code
// (such as that under the Third Party section) are licensed under
// their respective licenses.
//
#import <Availability.h>

#ifndef __IPHONE_3_0
#warning "This project uses features only available in iOS SDK 3.0 and later."
#endif

#ifdef __OBJC__
    #import <UIKit/UIKit.h>
    #import <Foundation/Foundation.h>

    #import "TestFlight.h"

    #define PKWait(block)     dispatch_after(dispatch_time(DISPATCH_TIME_NOW, 100000), dispatch_get_current_queue(), ^{ block } \
                                             )
    #define PKWaitDelay(dly, block)     dispatch_after(dispatch_time(DISPATCH_TIME_NOW, dly * 100000), \
                                                       dispatch_get_current_queue(), ^{ block } \
                                                       )

#endif

//for localization:
#define __T(k)        [[NSBundle mainBundle] localizedStringForKey : k value : k table : nil]
#define __Tv(k, v)      [[NSBundle mainBundle] localizedStringForKey : k value : v table : nil]
#define __Tvt(k, v, t)    [[NSBundle mainBundle] localizedStringForKey : k value : v table : t]

#define SYSTEM_VERSION_EQUAL_TO(v)                  ([[[UIDevice currentDevice] systemVersion] compare: v options: NSNumericSearch] \
                                                     == NSOrderedSame)
#define SYSTEM_VERSION_GREATER_THAN(v)              ([[[UIDevice currentDevice] systemVersion] compare: v options: NSNumericSearch] \
                                                     == NSOrderedDescending)
#define SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(v)  ([[[UIDevice currentDevice] systemVersion] compare: v options: NSNumericSearch] \
                                                     != NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN(v)                 ([[[UIDevice currentDevice] systemVersion] compare: v options: NSNumericSearch] \
                                                     == NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN_OR_EQUAL_TO(v)     ([[[UIDevice currentDevice] systemVersion] compare: v options: NSNumericSearch] \
                                                     != NSOrderedDescending)